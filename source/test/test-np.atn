def isUpper (s) {
	return s[0] >= "A" and s[0] <= "Z";
}

def member (s, l) {
	for (i = 0; i < l.length; i = i +1) {
		if (s == l[i]) return true;
	}
	return false;
}

nombre = "";

atn np {	
	pre = {"dr", "sr", "de"};
	fun = {"de", "la", "el"};
	suf = {"junior", "senior"};

	node IN {
		arc (isUpper(#.0)) goto NP {
			nombre = nombre + #.0 + " ";
		}
		arc (member(#.0, pre)) goto PREF {
			nombre = nombre + #.0 + " ";
		}
		arc(true) goto IN;
	}
	node PREF {
		arc (member(#.0, pre)) goto PREF {
			nombre = nombre + #.0 + " ";
		}
		arc (isUpper(#.0)) goto NP {
			nombre = nombre + #.0 + " ";
		}
		arc(true) goto IN {
			nombre = "";
		}
	}
	node NP {
		arc (isUpper(#.0)) goto NP {
			nombre = nombre + #.0 + " ";
		}
		arc (member(#.0, suf)) goto SUF {
			nombre = nombre + #.0 + " ";
		}
		arc (member(#.0, fun)) goto FUN {
			nombre = nombre + #.0 + " ";
		}
		arc (true) goto END;
	}
	node SUF {
		arc (member(#.0, suf)) goto SUF {
			nombre = nombre + #.0 + " ";
		}
		arc (true) goto END;
	}
	node FUN {
		arc (member(#.0, fun)) goto FUN {
			nombre = nombre + #.0 + " ";
		}
		arc (isUpper(#.0)) goto NP {
			nombre = nombre + #.0 + " ";
		}
	}
	node END accept;
}	

def main() {
	a = atn(np);
	if (a) print "Nombre encontrado: ",nombre, "%n";
	else print "ningÃºn nombre ha sido encontrado", "%n";
}

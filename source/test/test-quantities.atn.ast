(PROGRAM (def isNumber (PARAMS a) (LIST_INSTR (for (:= i 0) (< i (ARRAYLENGTH a)) (:= i (+ i 1)) (LIST_INSTR (if (== ([ a i) "1") (LIST_INSTR (if (== ([ a i) "2") (LIST_INSTR (if (== ([ a i) "3") (LIST_INSTR (if (== ([ a i) "4") (LIST_INSTR (if (== ([ a i) "5") (LIST_INSTR (if (== ([ a i) "6") (LIST_INSTR (if (== ([ a i) "7") (LIST_INSTR (if (== ([ a i) "8") (LIST_INSTR (if (== ([ a i) "9") (LIST_INSTR (return false))))))))))))))))))))) (return true))) (def member (PARAMS s l) (LIST_INSTR (for (:= i 0) (< i (ARRAYLENGTH l)) (:= i (+ i 1)) (LIST_INSTR (if (== s ([ l i)) (LIST_INSTR (return true))))) (return false))) (atn quantities (NODELIST (:= unit (ARRAY_DECL "km" "m" "s")) (:= frag (ARRAY_DECL "medio" "tercio" "cuarto")) (:= n "") (node A (ARC_LIST (arc (FUNCALL isNumber (ARGLIST (# 0))) (goto B) (LIST_INSTR (:= n (# 0)))))) (node B (ARC_LIST (arc (FUNCALL member (ARGLIST (# 0) unit)) (goto G) (LIST_INSTR (:= s (# 0)))) (arc (== (# 0) "por") (goto D)) (arc (or (== (# 0) "%") (FUNCALL member (ARGLIST (# 0) frag))) (goto C)) (arc (== (# 0) "sobre") (goto F)) (arc (== (# 0) "de") (goto E)))) (node C (ARC_LIST (arc (or (== (# 0) "parte") (== (# 0) "partes")) (goto C) (LIST_INSTR (:= s "Fraction"))) (arc true (goto END)))) (node D (ARC_LIST (arc (or (== (# 0) "100") (== (# 0) "1000")) (goto C) (LIST_INSTR (:= s (+ (+ (+ "Percentage: " n) " per ") (# 0))))))) (node E (ARC_LIST (arc (== (# 0) "cada") (goto F)))) (node F (ARC_LIST (arc (FUNCALL isNumber (ARGLIST (# 0))) (goto END) (LIST_INSTR (:= s (+ (+ (+ "Fraction: " n) " over ") (# 0))))))) (node G (ARC_LIST (arc true (goto END)))) (node END accept))) (:= s "") (def main PARAMS (LIST_INSTR (:= a (ATNCALL quantities)) (if (not a) (LIST_INSTR (print "Unit not detected. %n")) (LIST_INSTR (print s "%n"))))))